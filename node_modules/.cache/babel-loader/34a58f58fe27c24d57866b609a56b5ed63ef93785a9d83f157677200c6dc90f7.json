{"ast":null,"code":"/*eslint-disable*/\nimport axios from \"axios\";\nexport default {\n  name: \"RegistosCnpd\",\n  data: () => ({\n    users: [],\n    currentSort: \"name\",\n    currentSortDir: \"asc\",\n    search: \"\",\n    searchSelection: \"\",\n    pageSize: 8,\n    currentPage: 1\n  }),\n  methods: {\n    sort(s) {\n      if (s === this.currentSort) {\n        this.currentSortDir = this.currentSortDir === \"asc\" ? \"desc\" : \"asc\";\n      }\n      this.currentSort = s;\n    },\n    nextPage() {\n      if (this.currentPage * this.pageSize < this.users.length) this.currentPage++;\n    },\n    prevPage() {\n      if (this.currentPage > 1) this.currentPage--;\n    },\n    countNumbers() {\n      return this.users.length;\n    }\n  },\n  computed: {\n    sortedActivity() {\n      return this.listas.sort((a, b) => {\n        let modifier = 1;\n        if (this.currentSortDir === 'desc') modifier = -1;\n        if (a[this.currentSort] < b[this.currentSort]) return -1 * modifier;\n        if (a[this.currentSort] > b[this.currentSort]) return 1 * modifier;\n        return 0;\n      }).filter((row, index) => {\n        let start = (this.currentPage - 1) * this.pageSize;\n        let end = this.currentPage * this.pageSize;\n        if (index >= start && index < end) return true;\n      });\n    },\n    filteredList() {\n      return this.listas.filter(data => {\n        //let email = data.email.toLowerCase().match(this.search.toLowerCase());\n        let entidade = data.entidade.toLowerCase().match(this.search.toLowerCase());\n        let tipo_entidade = data.tipo_entidade.toLowerCase().match(this.search.toLowerCase());\n        let num_decisao = data.num_decisao.toLowerCase().match(this.search.toLowerCase());\n        return entidade || num_decisao || tipo_entidade /* || city || num_decisao*/;\n      }).filter((row, index) => {\n        let start = (this.currentPage - 1) * this.pageSize;\n        let end = this.currentPage * this.pageSize;\n        if (index >= start && index < end) return true;\n      });\n    }\n  },\n  created() {\n    axios.get('http://127.0.0.1:8000/api/registos').then(response => {\n      this.listas = response.data;\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","users","currentSort","currentSortDir","search","searchSelection","pageSize","currentPage","methods","sort","s","nextPage","length","prevPage","countNumbers","computed","sortedActivity","listas","a","b","modifier","filter","row","index","start","end","filteredList","entidade","toLowerCase","match","tipo_entidade","num_decisao","created","get","then","response"],"sourceRoot":"","sources":["/Users/jailsoncorreia/CNPDSYSTEM/SITECNPDFINAL/src/components/RegistosCnpd.vue"],"sourcesContent":["<template>\n  <section id=\"decisoes\" class=\"decisoes\">\n    <div class=\"container\">\n      <div class=\"section-bredcumbs\">\n        <h5>\n          Onde estou?\n          <router-link style=\"text-decoration: none\" to=\"/\">\n            <b>Página Inicial</b>\n          </router-link>\n          <b> > </b>\n          <router-link style=\"text-decoration: none\" to=\"#\">\n            <b>Decisões</b>\n          </router-link>\n          <b> > </b>\n          <router-link style=\"text-decoration: none\" to=\"/registos\">\n            <b>Registos Publicados</b>\n          </router-link>\n        </h5>\n      </div>\n      <div class=\"section-title\">\n        <h2>Decisões da CNPD</h2>\n      </div>\n\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <p class=\"pleft\">Registos disponíveis: {{ countNumbers() }}</p>\n          <input\n            id=\"idsearch\"\n            type=\"text\"\n            class=\"form-control\"\n            v-model=\"search\"\n            placeholder=\"Procurar por entidades ou por ano ...\"\n          />\n        </div>\n        <br />\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped table-bordered\" style=\"width: 100%\">\n            <thead width=\"400px\" class=\"trcabecalho\">\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\" @click=\"sort('name')\">\n                  Entidade<i class=\"fas fa-sort-alpha-down float-right\"></i>\n                </th>\n                <th scope=\"col\" @click=\"sort('phone')\">\n                  Ano<i class=\"fas fa-sort-alpha-down float-right\"></i>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"(user, index) in (sortedActivity, filteredList)\"\n                :key=\"index\"\n              >\n                <td>{{ index + 1 }}</td>\n                <td>\n                  <router-link\n                    :to=\"{ name: 'regisview', params: { id: user.id } }\"\n                  >\n                    {{ user.name }}\n                  </router-link>\n                </td>\n\n                <td>{{ user.phone }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div id=\"idpage\">\n          <button\n            id=\"button\"\n            @click=\"prevPage\"\n            class=\"float-left btn btn-outline-info btn-sm\"\n          >\n            <i class=\"fas fa-arrow-left\"></i>\n          </button>\n\n          <button\n            id=\"button\"\n            @click=\"nextPage\"\n            class=\"float-right btn btn-outline-info btn-sm\"\n          >\n            <i class=\"fas fa-arrow-right\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from \"axios\";\n\nexport default {\n  name: \"RegistosCnpd\",\n  data: () => ({\n    users: [],\n    currentSort: \"name\",\n    currentSortDir: \"asc\",\n    search: \"\",\n    searchSelection: \"\",\n    pageSize: 8,\n    currentPage: 1,\n  }),\n\n  methods: {\n    sort(s) {\n      if (s === this.currentSort) {\n        this.currentSortDir = this.currentSortDir === \"asc\" ? \"desc\" : \"asc\";\n      }\n      this.currentSort = s;\n    },\n    nextPage() {\n      if (this.currentPage * this.pageSize < this.users.length)\n        this.currentPage++;\n    },\n    prevPage() {\n      if (this.currentPage > 1) this.currentPage--;\n    },\n\n    countNumbers() {\n      return this.users.length;\n    },\n  },\n\n  computed: { \n    sortedActivity() {\n      return this.listas.sort((a,b) => {\n        let modifier = 1;\n        if(this.currentSortDir === 'desc') modifier = -1;\n        if(a[this.currentSort] < b[this.currentSort]) return -1 * modifier;\n        if(a[this.currentSort] > b[this.currentSort]) return 1 * modifier;\n        return 0;\n      }).filter((row, index) => {\n        let start = (this.currentPage-1)*this.pageSize;\n        let end = this.currentPage*this.pageSize;\n        if(index >= start && index < end) return true;\n      });\n    },\n    filteredList () {\n      return this.listas.filter((data) => {\n        //let email = data.email.toLowerCase().match(this.search.toLowerCase());\n        let entidade = data.entidade.toLowerCase().match(this.search.toLowerCase());\n        let tipo_entidade = data.tipo_entidade.toLowerCase().match(this.search.toLowerCase());\n        let num_decisao = data.num_decisao.toLowerCase().match(this.search.toLowerCase());\n        return entidade || num_decisao || tipo_entidade/* || city || num_decisao*/;\n      }).filter((row, index) => {\n        let start = (this.currentPage-1)*this.pageSize;\n        let end = this.currentPage*this.pageSize;\n        if(index >= start && index < end) return true;\n      });\n    }\n  },\n\n  created () {\n    axios.get('http://127.0.0.1:8000/api/registos')\n      .then(response => {\n        this.listas = response.data  \n      },)\n  },\n};\n</script>\n\n<style>\n#idpage {\n  display: flex;\n  justify-content: center;\n}\n#button {\n  color: #061536;\n  border: 2px solid #061536;\n  box-shadow: 1px 1px #061536;\n  height: 30px;\n  width: 30px;\n}\n#button:hover {\n  box-shadow: 1px 1px 3px 3px black;\n  color: #fff;\n  background-color: #061536;\n}\n#idsearch {\n  width: 40%;\n  height: 30px;\n  text-align: center;\n  box-shadow: 1px 1px #061536;\n}\n.form-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n.pcente {\n  text-align: center;\n  font-weight: bold;\n  margin-left: 10%;\n  margin-right: 10%;\n}\n.pcenter {\n  text-align: center;\n  margin-left: 20%;\n  margin-right: 20%;\n  font-weight: bold;\n}\n.pleft {\n  text-align: left;\n  font-weight: bold;\n}\n\n.section-title {\n  text-align: center;\n  padding-bottom: 30px;\n}\n.section-title h2 {\n  font-size: 13px;\n  letter-spacing: 1px;\n  font-weight: 700;\n  padding: 8px 20px;\n  line-height: 1;\n  margin: 0;\n  background: #bd9a13;\n  color: #000;\n  display: inline-block;\n  text-transform: uppercase;\n  border-radius: 50px;\n}\n\n.decisoes {\n  background: #fff;\n  padding-top: 120px;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\na {\n  text-decoration: none;\n}\n.decisoes .icon-box {\n  display: flex;\n  align-items: center;\n  padding: 20px;\n  transition: ease-in-out 0.3s;\n  box-shadow: 2px 0 35px 0 rgba(68, 88, 144, 0.12);\n}\n.decisoes .icon-box i {\n  font-size: 32px;\n  padding-right: 10px;\n  line-height: 1;\n}\n.decisoes .icon-box h3 {\n  font-weight: 700;\n  margin: 0;\n  padding: 0;\n  line-height: 1;\n  font-size: 16px;\n}\n.decisoes .icon-box h3 a {\n  color: #493c3e;\n  transition: ease-in-out 0.3s;\n}\n.decisoes .icon-box:hover a {\n  color: #bd9a13;\n}\n\nth {\n  cursor: pointer;\n  /* width: 500px !important; */\n  white-space: nowrap;\n}\n\ntr {\n  white-space: nowrap;\n}\n.table-responsive {\n  text-align: left;\n}\n\n.trcabecalho {\n  font-weight: bold;\n  background-color: #fff;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}